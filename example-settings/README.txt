CJKTokenizerによるトークン化の形式を変更したい場合、本ディレクトリ配下の例を参考に、zz_action,zz_cmap,
zz_transファイルを自作して、schema.xmlと同一ディレクトリに配置後、schema.xmlを修正してください.
CJKTokenizerのデフォルトのトークン化の形式は以下の通りです.
	アルファベット => word単位
	その他の言語の文字 => unigram + bigram

本ディレクトリ配下の設定ファイルの例を使用すると以下の形式でトークン化されます.
	漢字・平仮名・片仮名・ハングル => unigram + bigram
	その他の言語の文字 => word単位

1.cmapファイルの説明
　トークン化形式を指定する単位（以降classと記載）の定義を行います.
　class番号は1～連続の整数値で指定してください.（class=0は予約クラスであるため使用できません）
　classの範囲は文字コード（UTF-16）で指定します.

2.transファイルの説明
　縦を現在の状態、横を入力文字のclassとする状態遷移図です.
　状態0は開始、-1は終了状態を示します.
　開始から終了状態に遷移するまでに、読み込まれた文字列をトークン候補とします.
　このトークン候補を実際にトークン化するか否かはactionファイルにて定義します.

1.actionファイルの説明
　各classのトークン化の種別を指定します.
	action=0 => トークン化しない
	action=1 => word
	action=2 => unigram
　トークン化するか否かは0 or 1,2で決定します.
　2を指定したトークンは、CJKBigramFilterと組み合わせた時にunigram + bigramに変換されます.

本ディレクトリ配下の例では各classは下記の通りグループ分けしています.
	1:記号
	2:全角記号
	3:数値
	4:英字
	5:漢字
	6:ひらがな
	7:カタカナ
	8:ハングル
	9:その他言語
	10:上位サロゲート
	11:下位サロゲート単独
	12:上位->下位サロゲート
	13:その他(記号や文字以外)
